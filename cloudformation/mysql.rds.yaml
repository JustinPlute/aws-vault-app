---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation Stack to create MySQL RDS instance
  Last Modified: 26th November 2017
  Author: Justin Plute <rplute@gmail.com>

Parameters:
  DBName:
    Default: mysqldb
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '8'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUsername:
    Default: root
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    Default: root1234
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '8'
  DBClass:
    Default: db.t2.micro
    Description: Database instance class
    Type: String
    AllowedValues:
      - db.t2.micro
      - db.m1.small
      - db.m1.large
      - db.m1.xlarge
      - db.m2.xlarge
    ConstraintDescription: must select a valid database instance type.
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '6144'
    ConstraintDescription: must be between 5+

Resources:
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      Engine: MySQL
      MasterUsername: !Ref DBUsername
      DBInstanceClass: !Ref DBClass
      DBSecurityGroups:
        - Ref: DBSecurityGroup
      AllocatedStorage: !Ref DBAllocatedStorage
      MasterUserPassword: !Ref DBPassword
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName: !Ref WebServerSecurityGroup
      GroupDescription: Frontend Access
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
      CidrIp: 0.0.0.0/0

Outputs:
  JDBCConnectionString:
    Description: JDBC connection string for database
    Value: !Join ['', ['jdbc::mysql://', !GetAtt 'DBInstance.Endpoint.Address', ':',
        !GetAtt 'DBInstance.Endpoint.Port', /, !Ref 'DBName']]
